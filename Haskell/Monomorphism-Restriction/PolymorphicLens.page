---
format: markdown+lhs
title: How to Write a Lens for a Data Type with Polymorphic Records?
...

- You can test this document with doctest.

I leaned about Haskell's polymorphism when I tried to write a lens for
a polymorphic data type. Let me shrink the [original sample code](http://comments.gmane.org/gmane.comp.lang.haskell.cafe/101316) to a minimal one.

> {-# LANGUAGE RankNTypes #-}
> {-# OPTIONS -Wall #-}
> module Main where

Here is the polymorphic data type:

> data Speaker = Speaker
>   { speak :: Show a => a -> String }

And a geisha. You sound like a geisha if you speak with suffix "dosu."

> geisha :: Speaker
> geisha = Speaker { speak = (++ " dosu.") . show }
>
> -- | Test of speak
> --
> -- >>> speak geisha 130
> -- "130 dosu."
>
> main :: IO ()
> main = return ()

Now, when I try to create a lens for `Speaker` I ran into [a
problem](PolymorphicLens2).